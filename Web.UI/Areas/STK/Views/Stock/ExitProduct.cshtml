@model ExitProductInput
@{
    Layout = null;
}
@Html.Partial("_ValSum")
<style>
    .productRow {
        padding: 3px 10px 0 10px !important;
    }
</style>
@using (Html.BeginForm())
{
    <div class="form-group row">
        <label class="col-sm-4 font-weight-bold col-form-label col-form-label-sm">Firma</label>
        <div class="col-md-8">
            <select name="LocationId" class="form-control" id="LocationId" required></select>
            @Html.ValidationMessageFor(s => s.LocationId)
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-4 font-weight-bold col-form-label col-form-label-sm">Ürün</label>
        <div class="col-md-8">
            <select class="form-control" id="ProductId"></select>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-4 font-weight-bold col-form-label col-form-label-sm">Adet</label>
        <div class="col-md-6">
            <input type="number" class="form-control" id="ProductCount" />
        </div>
        <div class="col-md-2">
            <button type="button" class="btn btn-warning" onclick="addProduct()">Listeye Ekle</button>
        </div>
    </div>
    <div class="form-group row">
        <table class="table table-striped" style="font-size:10px">
            <thead>
                <tr>
                    <td width="70%">Ürün</td>
                    <td width="20%">Adet</td>
                    <td width="15px"></td>
                </tr>
            </thead>
            <tbody id="products">
                @if (Model.Products != null && Model.Products.Count > 0)
                {
                    for (int i = 0; i < Model.Products.Count; i++)
                    {
                        <tr id="newProduct_@i">
                            <td class="productRow">
                                <input type="hidden" value="@Model.Products[i].StockId" class="productId" name="Products[@i].StockId" />
                                <input type="hidden" value="@Model.Products[i].Name" name="Products[@i].Name" />
                                <input type="hidden" value="@Model.Products[i].IsDeleted" name="Products[@i].IsDeleted" id="Products_@(i)_IsDeleted" />
                                <label class="form-control">@Model.Products[i].Name</label>
                            </td>
                            <td class="productRow">
                                <input type="number" value="@Model.Products[i].Count" class="form-control" name="Products[@i].Count" required />
                            </td>
                            <td class="productRow">
                                <button type="button" onclick="deleteProduct(this)" data-id="@i" class="btn btn-icon btn-danger mr-1 mb-1">
                                    <i class="fa fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}
<script id="newProductTemplate" type="text/x-handlebars-template">
    <tr id="newProduct_{{index}}">
        <td class="productRow">
            <input type="hidden" value="{{Product.ProductId}}" class="productId" name="Products[{{index}}].StockId" />
            <input type="hidden" value="{{Product.Name}}" name="Products[{{index}}].Name" />
            <input type="hidden" value="0" name="Products[{{index}}].IsDeleted" id="Products_{{index}}_IsDeleted" />
            <label class="form-control">{{Product.Name}}</label>
        </td>
        <td class="productRow">
            <input type="number" value="{{Product.Count}}" class="form-control" name="Products[{{index}}].Count" required />
        </td>
        <td class="productRow">
            <button type="button" onclick="deleteProduct(this)" data-id="{{index}}" class="btn btn-icon btn-danger mr-1 mb-1">
                <i class="fa fa-trash"></i>
            </button>
        </td>
    </tr>
</script>
<script>
    $(document).ready(function () {
    initDropDowns();
    showModelErrors();
})

    function initDropDowns() {
    var locationId = @(Model!=null ? Model.LocationId>0? Model.LocationId.ToString():"":"")
        $.ajax({
            url: '/Data/GetAllLocationsWithCustomerNameForSelect2',
            dataType: 'json',
            type: 'GET'
        }).done(function (data) {
            $("#LocationId").select2({
        data: data,
                width: '100%'
            });
            $("#LocationId").val(locationId).trigger('change');
    })

        $.ajax({
            url: '/Data/GetProductForSelect2',
            dataType: 'json',
            type: 'GET'
        }).done(function (data) {
            $("#ProductId").select2({
        data: data,
                width: '100%'
            });
    })
    }

function showModelErrors() {
    var errors = [];
    @foreach (var error in ViewData.ModelState.Values.Where(s => s.Errors.Any()))
        {
        foreach (var item in error.Errors)
        {
            @:errors.push('@item.ErrorMessage')
            }
        }
        showErrorMessagesOnValidate(errors);
    }

    var productTemplateScript = $("#newProductTemplate").html();
    var productTemplate = Handlebars.compile(productTemplateScript);

    function addProduct() {
        var productId = $("#ProductId").val();

        if (isProductExists(productId)) {
            showError("Bu ürün zaten listede mevcut");
            return;
        }

        var index = $('#products tr').length;
        var productName = $("#ProductId").select2('data')[0].text;
        var count = $("#ProductCount").val();

        if (count < 1) {
            showError("Ürün adeti 1 den fazla olmalıdır");
            return;
        }

        var product = {
            Name: productName,
            ProductId: productId,
            Count: count
        };

        if (index == 0) {
            $('#products').html(productTemplate({ "Product": product, "index": index }));
        }
        else {
            $('#products tr:last').after(productTemplate({ "Product": product, "index": index }));
        }
        clearProduct();
    }

    function isProductExists(id) {
        var product = $("input[value='" + id + "'][class='productId']");
        if (product.length)
            return true;
        return false;
    }

    function clearProduct() {
        $("#productId").val("");
        $("#productCount").val("");
    }

    function deleteProduct(v) {
        var id = $(v).attr("data-id");
        $("#newProduct_" + id).hide();
        $("#Products_" + id + "_IsDeleted").val(1);
    }
</script>
